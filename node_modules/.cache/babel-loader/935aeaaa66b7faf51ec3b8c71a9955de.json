{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\thinkfornecedoresfront\\\\src\\\\components\\\\vendaEstoque\\\\VendaEstoque.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./VendaEstoque.css\";\nimport { Card, CardTitle, Button } from 'reactstrap'; //import { useEffect } from \"react\";\n\nimport MenuSuperior from '../menuSuperior/MenuSuperior';\nimport TabelaFornecedor from '../tabelaFornecedor/TabelaFornecedor';\nimport api from '../../api';\n\nconst VendaEstoque = props => {\n  const [vendasdia, setVendasdia] = useState([]);\n  const [vendas, setVendas] = useState([]);\n  const [vendasmes, setVendasmes] = useState([]);\n  const [Estoquetotal, setEstoquetotal] = useState([]);\n  const [ultimaatualizacao, setUltimaatualizacao] = useState([]);\n  const for_cod = localStorage.getItem('for_cod');\n\n  function hoje() {\n    var today = new Date();\n    var dd = today.getDate();\n    var mm = today.getMonth() + 1; //January is 0!\n\n    var yyyy = today.getFullYear();\n\n    if (dd < 10) {\n      dd = '0' + dd;\n    }\n\n    if (mm < 10) {\n      mm = '0' + mm;\n    }\n\n    var formatado = dd + '/' + mm + '/' + yyyy;\n    var bd = yyyy + '-' + mm + '-' + dd;\n    var valores = {\n      'formatado': formatado,\n      'bd': bd\n    };\n    return valores;\n  }\n\n  function buscarUltimos30dias() {\n    var datIni = hoje().bd;\n    var mesPegar = datIni.split('-')[1];\n\n    if (mesPegar === '0') {\n      mesPegar = '12';\n    } else {\n      mesPegar = parseInt(mesPegar) - 1;\n\n      if (mesPegar < 10) {\n        mesPegar = '0' + mesPegar.toString();\n      } else {\n        mesPegar = mesPegar.toString();\n      }\n    }\n\n    var dataMes = datIni.split('-')[0] + '-' + mesPegar + '-' + datIni.split('-')[2];\n    return dataMes;\n  }\n\n  function buscarQuinzena() {\n    var datIni = hoje().bd;\n    var dia = datIni.split('-')[2];\n    var mes = datIni.split('-')[1];\n    var ano = datIni.split('-')[0];\n    var diaIni = '01';\n    var diaFim = '15';\n\n    if (dia > '15') {\n      diaIni = '16';\n      diaFim = '31';\n\n      if (mes === '02') {\n        if (ano % 4 === 0 && ano % 100 !== 0 || ano % 400 === 0) {\n          diaFim = '29';\n        } else {\n          diaFim = '28';\n        }\n      } else if (mes === '04' || mes === '06' || mes === '09' || mes === '11') {\n        diaFim = '30';\n      }\n    }\n\n    var dataIni = ano + '-' + mes + '-' + diaIni;\n    var dataFim = ano + '-' + mes + '-' + diaFim;\n    var valores = {\n      'dataIni': dataIni,\n      'dataFim': dataFim\n    };\n    return valores;\n  }\n\n  useEffect(() => {\n    api.get(`vendasdia/${for_cod}/${hoje().bd}`).then(response => {\n      setVendasdia(response.data);\n    });\n  }, [for_cod]);\n  useEffect(() => {\n    api.get(`vendas/${for_cod}/${buscarQuinzena().dataIni}/${buscarQuinzena().dataFim}`).then(response => {\n      setVendas(response.data);\n    });\n  }, [for_cod]);\n  var datFim = hoje().bd;\n  useEffect(() => {\n    api.get(`vendasmes/${for_cod}/${buscarUltimos30dias()}/${datFim}`).then(response => {\n      setVendasmes(response.data);\n    });\n  }, [for_cod]);\n  useEffect(() => {\n    api.get(`Estoquetotal/${for_cod}`).then(response => {\n      setEstoquetotal(response.data);\n    });\n  }, [for_cod]);\n  var datIniQuinz = buscarQuinzena().dataIni;\n  var datFimQuinz = buscarQuinzena().dataFim;\n  var dataMes = buscarUltimos30dias();\n  useEffect(() => {\n    api.get(`ultimaatualizacao/`).then(response => {\n      setUltimaatualizacao(response.data);\n      console.log(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MenuSuperior, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"root3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"geral\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"b\", {\n    id: \"ultimaAtualizacaoMov\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 1\n    }\n  }, \"\\xDAltima atualiza\\xE7\\xE3o: \", ultimaatualizacao.movfor_hora), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container2\",\n    id: \"resumo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rowVendaEstoque\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cardgeral\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, vendasdia.map(vendasdia => /*#__PURE__*/React.createElement(\"div\", {\n    key: vendasdia,\n    className: \"bloco\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 33\n    }\n  }, \"Venda Hoje\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"quantidade\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 20\n    }\n  }, \"Quantidade: \", vendasdia.totalpeca)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"valorTotal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 24\n    }\n  }, \"Valor Total: \", vendasdia.total)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"periodo1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 37\n    }\n  }, \"De: \", hoje().formatado), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"periodo2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 37\n    }\n  }, \" Ate: \", hoje().formatado)), /*#__PURE__*/React.createElement(Button, {\n    id: \"buttom1\",\n    className: \"btn1\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 33\n    }\n  }, \"VER\")))), vendas.map(vendas => /*#__PURE__*/React.createElement(\"div\", {\n    key: vendas,\n    className: \"bloco\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 33\n    }\n  }, \"Venda Quinzena\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"quantidade\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 36\n    }\n  }, \"Quantidade: \", vendas.totalpeca)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"valorTotal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 36\n    }\n  }, \"Valor Total: \", vendas.total)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"periodo1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 37\n    }\n  }, \"De: \", datIniQuinz.split('-')[2] + '/' + datIniQuinz.split('-')[1] + '/' + datIniQuinz.split('-')[0]), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"periodo2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 37\n    }\n  }, \" Ate: \", datFimQuinz.split('-')[2] + '/' + datFimQuinz.split('-')[1] + '/' + datFimQuinz.split('-')[0])), /*#__PURE__*/React.createElement(Button, {\n    id: \"buttom2\",\n    className: \"btn2\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 33\n    }\n  }, \"VER\")))), vendasmes.map(vendasmes => /*#__PURE__*/React.createElement(\"div\", {\n    key: vendasmes,\n    className: \"bloco\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 33\n    }\n  }, \"Venda \\xDAltimos 30 dias\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"quantidade\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 36\n    }\n  }, \"Quantidade: \", vendasmes.totalpeca)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"valorTotal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 36\n    }\n  }, \"Valor Total: \", vendasmes.total)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"periodo1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 37\n    }\n  }, \"De: \", dataMes.split('-')[2] + '/' + dataMes.split('-')[1] + '/' + dataMes.split('-')[0]), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"periodo2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 37\n    }\n  }, \" Ate: \", hoje().formatado)), /*#__PURE__*/React.createElement(Button, {\n    id: \"buttom3\",\n    className: \"btn\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 33\n    }\n  }, \"VER\")))), Estoquetotal.map(Estoquetotal => /*#__PURE__*/React.createElement(\"div\", {\n    key: Estoquetotal,\n    className: \"bloco\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"card4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 33\n    }\n  }, \"Estoque\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"quantidade\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 36\n    }\n  }, \"Quantidade: \", Estoquetotal.totalpeca)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"valorTotal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 36\n    }\n  }, \"Valor Total: \", Estoquetotal.total)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"periodo1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 37\n    }\n  }, \"Estoque Total\")), /*#__PURE__*/React.createElement(Button, {\n    id: \"buttom4\",\n    className: \"btn4\",\n    type: \"button\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 33\n    }\n  }, \"INFORMATIVO\"))))))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TabelaFornecedor, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 5\n    }\n  })));\n};\n\nexport default VendaEstoque;","map":{"version":3,"sources":["C:/wamp64/www/thinkfornecedoresfront/src/components/vendaEstoque/VendaEstoque.js"],"names":["React","useState","useEffect","Card","CardTitle","Button","MenuSuperior","TabelaFornecedor","api","VendaEstoque","props","vendasdia","setVendasdia","vendas","setVendas","vendasmes","setVendasmes","Estoquetotal","setEstoquetotal","ultimaatualizacao","setUltimaatualizacao","for_cod","localStorage","getItem","hoje","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","formatado","bd","valores","buscarUltimos30dias","datIni","mesPegar","split","parseInt","toString","dataMes","buscarQuinzena","dia","mes","ano","diaIni","diaFim","dataIni","dataFim","get","then","response","data","datFim","datIniQuinz","datFimQuinz","console","log","movfor_hora","map","totalpeca","total"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,oBAAP;AACA,SAAQC,IAAR,EAAcC,SAAd,EAAyBC,MAAzB,QAAsC,YAAtC,C,CACA;;AAEA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,gBAAP,MAA6B,sCAA7B;AACA,OAAOC,GAAP,MAAgB,WAAhB;;AAKA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAEhC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACgB,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACkB,iBAAD,EAAoBC,oBAApB,IAA4CnB,QAAQ,CAAC,EAAD,CAA1D;AAEA,QAAMoB,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAhB;;AAGA,WAASC,IAAT,GAAgB;AACZ,QAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,QAAIC,EAAE,GAAGF,KAAK,CAACG,OAAN,EAAT;AACA,QAAIC,EAAE,GAAGJ,KAAK,CAACK,QAAN,KAAmB,CAA5B,CAHY,CAGmB;;AAE/B,QAAIC,IAAI,GAAGN,KAAK,CAACO,WAAN,EAAX;;AACA,QAAIL,EAAE,GAAG,EAAT,EAAa;AACTA,MAAAA,EAAE,GAAG,MAAMA,EAAX;AACH;;AACD,QAAIE,EAAE,GAAG,EAAT,EAAa;AACTA,MAAAA,EAAE,GAAG,MAAMA,EAAX;AACH;;AACD,QAAII,SAAS,GAAGN,EAAE,GAAG,GAAL,GAAWE,EAAX,GAAgB,GAAhB,GAAsBE,IAAtC;AACA,QAAIG,EAAE,GAAGH,IAAI,GAAG,GAAP,GAAaF,EAAb,GAAkB,GAAlB,GAAwBF,EAAjC;AACA,QAAIQ,OAAO,GAAG;AAAC,mBAAaF,SAAd;AAAyB,YAAMC;AAA/B,KAAd;AACA,WAAOC,OAAP;AACH;;AAED,WAASC,mBAAT,GAA+B;AAC3B,QAAIC,MAAM,GAAGb,IAAI,GAAGU,EAApB;AACA,QAAII,QAAQ,GAAGD,MAAM,CAACE,KAAP,CAAa,GAAb,EAAkB,CAAlB,CAAf;;AACA,QAAID,QAAQ,KAAK,GAAjB,EAAsB;AAClBA,MAAAA,QAAQ,GAAG,IAAX;AACH,KAFD,MAEO;AACHA,MAAAA,QAAQ,GAAGE,QAAQ,CAACF,QAAD,CAAR,GAAqB,CAAhC;;AACA,UAAIA,QAAQ,GAAG,EAAf,EAAmB;AACfA,QAAAA,QAAQ,GAAG,MAAMA,QAAQ,CAACG,QAAT,EAAjB;AACH,OAFD,MAEO;AACHH,QAAAA,QAAQ,GAAGA,QAAQ,CAACG,QAAT,EAAX;AACH;AACJ;;AACD,QAAIC,OAAO,GAAGL,MAAM,CAACE,KAAP,CAAa,GAAb,EAAkB,CAAlB,IAAuB,GAAvB,GAA6BD,QAA7B,GAAwC,GAAxC,GAA8CD,MAAM,CAACE,KAAP,CAAa,GAAb,EAAkB,CAAlB,CAA5D;AACA,WAAOG,OAAP;AACH;;AAED,WAASC,cAAT,GAA0B;AACtB,QAAIN,MAAM,GAAGb,IAAI,GAAGU,EAApB;AACA,QAAIU,GAAG,GAAGP,MAAM,CAACE,KAAP,CAAa,GAAb,EAAkB,CAAlB,CAAV;AACA,QAAIM,GAAG,GAAGR,MAAM,CAACE,KAAP,CAAa,GAAb,EAAkB,CAAlB,CAAV;AACA,QAAIO,GAAG,GAAGT,MAAM,CAACE,KAAP,CAAa,GAAb,EAAkB,CAAlB,CAAV;AACA,QAAIQ,MAAM,GAAG,IAAb;AACA,QAAIC,MAAM,GAAG,IAAb;;AACA,QAAIJ,GAAG,GAAG,IAAV,EAAgB;AACZG,MAAAA,MAAM,GAAG,IAAT;AACAC,MAAAA,MAAM,GAAG,IAAT;;AACA,UAAIH,GAAG,KAAK,IAAZ,EAAkB;AACd,YAAMC,GAAG,GAAG,CAAN,KAAY,CAAb,IAAoBA,GAAG,GAAG,GAAN,KAAc,CAAnC,IAA2CA,GAAG,GAAG,GAAN,KAAc,CAA7D,EAAiE;AAC7DE,UAAAA,MAAM,GAAG,IAAT;AACH,SAFD,MAEO;AACHA,UAAAA,MAAM,GAAG,IAAT;AACH;AACJ,OAND,MAMO,IAAIH,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAK,IAAxB,IAAgCA,GAAG,KAAK,IAAxC,IAAgDA,GAAG,KAAK,IAA5D,EAAkE;AACrEG,QAAAA,MAAM,GAAG,IAAT;AACH;AACJ;;AACD,QAAIC,OAAO,GAAGH,GAAG,GAAG,GAAN,GAAYD,GAAZ,GAAkB,GAAlB,GAAwBE,MAAtC;AACA,QAAIG,OAAO,GAAGJ,GAAG,GAAG,GAAN,GAAYD,GAAZ,GAAkB,GAAlB,GAAwBG,MAAtC;AACA,QAAIb,OAAO,GAAG;AAAC,iBAAWc,OAAZ;AAAqB,iBAAWC;AAAhC,KAAd;AACA,WAAOf,OAAP;AACH;;AAEDjC,EAAAA,SAAS,CAAC,MAAK;AACbM,IAAAA,GAAG,CAAC2C,GAAJ,CAAS,aAAY9B,OAAQ,IAAGG,IAAI,GAAGU,EAAG,EAA1C,EAA6CkB,IAA7C,CAAkDC,QAAQ,IAAI;AAEhEzC,MAAAA,YAAY,CAACyC,QAAQ,CAACC,IAAV,CAAZ;AACG,KAHD;AAID,GALQ,EAKP,CAACjC,OAAD,CALO,CAAT;AAOAnB,EAAAA,SAAS,CAAC,MAAK;AACXM,IAAAA,GAAG,CAAC2C,GAAJ,CAAS,UAAS9B,OAAQ,IAAGsB,cAAc,GAAGM,OAAQ,IAAGN,cAAc,GAAGO,OAAQ,EAAlF,EAAqFE,IAArF,CAA0FC,QAAQ,IAAI;AAElGvC,MAAAA,SAAS,CAACuC,QAAQ,CAACC,IAAV,CAAT;AACH,KAHD;AAID,GALM,EAKL,CAACjC,OAAD,CALK,CAAT;AAOE,MAAIkC,MAAM,GAAG/B,IAAI,GAAGU,EAApB;AAEAhC,EAAAA,SAAS,CAAC,MAAK;AACbM,IAAAA,GAAG,CAAC2C,GAAJ,CAAS,aAAY9B,OAAQ,IAAGe,mBAAmB,EAAG,IAAGmB,MAAO,EAAhE,EAAmEH,IAAnE,CAAwEC,QAAQ,IAAI;AAEhFrC,MAAAA,YAAY,CAACqC,QAAQ,CAACC,IAAV,CAAZ;AACH,KAHD;AAID,GALQ,EAKP,CAACjC,OAAD,CALO,CAAT;AAOAnB,EAAAA,SAAS,CAAC,MAAK;AACbM,IAAAA,GAAG,CAAC2C,GAAJ,CAAS,gBAAe9B,OAAQ,EAAhC,EAAmC+B,IAAnC,CAAwCC,QAAQ,IAAI;AAChDnC,MAAAA,eAAe,CAACmC,QAAQ,CAACC,IAAV,CAAf;AACH,KAFD;AAGD,GAJQ,EAIP,CAACjC,OAAD,CAJO,CAAT;AAQA,MAAImC,WAAW,GAAGb,cAAc,GAAGM,OAAnC;AACA,MAAIQ,WAAW,GAAGd,cAAc,GAAGO,OAAnC;AACA,MAAIR,OAAO,GAAGN,mBAAmB,EAAjC;AAGDlC,EAAAA,SAAS,CAAC,MAAK;AACZM,IAAAA,GAAG,CAAC2C,GAAJ,CAAS,oBAAT,EAA8BC,IAA9B,CAAmCC,QAAQ,IAAI;AAC3CjC,MAAAA,oBAAoB,CAACiC,QAAQ,CAACC,IAAV,CAApB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACC,IAArB;AACH,KAHD;AAID,GALO,EAKN,EALM,CAAT;AAcD,sBACA,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAFJ,eAQI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEZ;AAAG,IAAA,EAAE,EAAC,sBAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAkDnC,iBAAiB,CAACyC,WAApE,CAFY,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,eAMI;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,EAAE,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCjD,SAAS,CAACkD,GAAV,CAAclD,SAAS,iBACpB;AAAM,IAAA,GAAG,EAAEA,SAAX;AAAsB,IAAA,SAAS,EAAC,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAGZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAG;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA0CA,SAAS,CAACmD,SAApD,CAAH,CAHY,eAIR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAG;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA2CnD,SAAS,CAACoD,KAArD,CAAH,CAJQ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAgCvC,IAAI,GAAGS,SAAvC,CADJ,eAEI;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAkCT,IAAI,GAAGS,SAAzC,CAFJ,CALJ,eASI,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,SAAX;AAAqB,IAAA,SAAS,EAAC,MAA/B;AAAsC,IAAA,IAAI,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WATJ,CADJ,CADH,CADD,EAqBQpB,MAAM,CAACgD,GAAP,CAAWhD,MAAM,iBACrB;AAAM,IAAA,GAAG,EAAEA,MAAX;AAAmB,IAAA,SAAS,EAAC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAG;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA0CA,MAAM,CAACiD,SAAjD,CAAH,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAG;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA2CjD,MAAM,CAACkD,KAAlD,CAAH,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAgCP,WAAW,CAACjB,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,IAA4B,GAA5B,GAAkCiB,WAAW,CAACjB,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,CAAlC,GAA8D,GAA9D,GAAoEiB,WAAW,CAACjB,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,CAApG,CADJ,eAEI;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAkCkB,WAAW,CAAClB,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,IAA4B,GAA5B,GAAkCkB,WAAW,CAAClB,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,CAAlC,GAA8D,GAA9D,GAAoEkB,WAAW,CAAClB,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,CAAtG,CAFJ,CAJJ,eAQI,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,SAAX;AAAqB,IAAA,SAAS,EAAC,MAA/B;AAAsC,IAAA,IAAI,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WARJ,CADJ,CADI,CArBR,EAoCnBxB,SAAS,CAAC8C,GAAV,CAAc9C,SAAS,iBACA;AAAM,IAAA,GAAG,EAAEA,SAAX;AAAsB,IAAA,SAAS,EAAC,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAG;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA0CA,SAAS,CAAC+C,SAApD,CAAH,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAG;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA2C/C,SAAS,CAACgD,KAArD,CAAH,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAgCrB,OAAO,CAACH,KAAR,CAAc,GAAd,EAAmB,CAAnB,IAAwB,GAAxB,GAA8BG,OAAO,CAACH,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAA9B,GAAsD,GAAtD,GAA4DG,OAAO,CAACH,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAA5F,CADJ,eAEI;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAkCf,IAAI,GAAGS,SAAzC,CAFJ,CAJJ,eAQI,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,SAAX;AAAqB,IAAA,SAAS,EAAC,KAA/B;AAAqC,IAAA,IAAI,EAAC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WARJ,CADJ,CADvB,CApCmB,EAkDKhB,YAAY,CAAC4C,GAAb,CAAiB5C,YAAY,iBAC9B;AAAK,IAAA,GAAG,EAAEA,YAAV;AAAwB,IAAA,SAAS,EAAC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAG;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA0CA,YAAY,CAAC6C,SAAvD,CAAH,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAG;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA2C7C,YAAY,CAAC8C,KAAxD,CAAH,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CAJJ,eAOI,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,SAAX;AAAqB,IAAA,SAAS,EAAC,MAA/B;AAAsC,IAAA,IAAI,EAAC,QAA3C;AAAoD,IAAA,QAAQ,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPJ,CADJ,CADC,CAlDL,CADJ,CADJ,CANJ,CADJ,CARJ,eAqFI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CArFJ,CADA;AA6FC,CAvND;;AAyNA,eAAetD,YAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport \"./VendaEstoque.css\";\r\nimport {Card, CardTitle, Button} from 'reactstrap';\r\n//import { useEffect } from \"react\";\r\n\r\nimport MenuSuperior from '../menuSuperior/MenuSuperior';\r\nimport TabelaFornecedor from '../tabelaFornecedor/TabelaFornecedor';\r\nimport api from '../../api';\r\n\r\n\r\n\r\n\r\nconst VendaEstoque = (props) => {\r\n\r\nconst [vendasdia, setVendasdia] = useState([]);\r\nconst [vendas, setVendas] = useState([]);\r\nconst [vendasmes, setVendasmes] = useState([]);\r\nconst [Estoquetotal, setEstoquetotal] = useState([]);\r\nconst [ultimaatualizacao, setUltimaatualizacao] = useState([]);\r\n\r\nconst for_cod = localStorage.getItem('for_cod')\r\n\r\n\r\nfunction hoje() {\r\n    var today = new Date();\r\n    var dd = today.getDate();\r\n    var mm = today.getMonth() + 1; //January is 0!\r\n\r\n    var yyyy = today.getFullYear();\r\n    if (dd < 10) {\r\n        dd = '0' + dd;\r\n    }\r\n    if (mm < 10) {\r\n        mm = '0' + mm;\r\n    }\r\n    var formatado = dd + '/' + mm + '/' + yyyy;\r\n    var bd = yyyy + '-' + mm + '-' + dd;\r\n    var valores = {'formatado': formatado, 'bd': bd};\r\n    return valores;\r\n}\r\n\r\nfunction buscarUltimos30dias() {\r\n    var datIni = hoje().bd;\r\n    var mesPegar = datIni.split('-')[1];\r\n    if (mesPegar === '0') {\r\n        mesPegar = '12';\r\n    } else {\r\n        mesPegar = parseInt(mesPegar) - 1;\r\n        if (mesPegar < 10) {\r\n            mesPegar = '0' + mesPegar.toString();\r\n        } else {\r\n            mesPegar = mesPegar.toString();\r\n        }\r\n    }\r\n    var dataMes = datIni.split('-')[0] + '-' + mesPegar + '-' + datIni.split('-')[2];\r\n    return dataMes;\r\n}\r\n\r\nfunction buscarQuinzena() {\r\n    var datIni = hoje().bd;\r\n    var dia = datIni.split('-')[2];\r\n    var mes = datIni.split('-')[1];\r\n    var ano = datIni.split('-')[0];\r\n    var diaIni = '01';\r\n    var diaFim = '15';\r\n    if (dia > '15') {\r\n        diaIni = '16';\r\n        diaFim = '31';\r\n        if (mes === '02') {\r\n            if (((ano % 4 === 0) && (ano % 100 !== 0)) || (ano % 400 === 0)) {\r\n                diaFim = '29';\r\n            } else {\r\n                diaFim = '28';\r\n            }\r\n        } else if (mes === '04' || mes === '06' || mes === '09' || mes === '11') {\r\n            diaFim = '30';\r\n        }\r\n    }\r\n    var dataIni = ano + '-' + mes + '-' + diaIni;\r\n    var dataFim = ano + '-' + mes + '-' + diaFim;\r\n    var valores = {'dataIni': dataIni, 'dataFim': dataFim};\r\n    return valores;\r\n}\r\n\r\nuseEffect(()=> {\r\n  api.get(`vendasdia/${for_cod}/${hoje().bd}`).then(response => {\r\n     \r\nsetVendasdia(response.data)\r\n  })\r\n},[for_cod]);\r\n\r\nuseEffect(()=> {\r\n    api.get(`vendas/${for_cod}/${buscarQuinzena().dataIni}/${buscarQuinzena().dataFim}`).then(response => {\r\n \r\n        setVendas(response.data)\r\n    })\r\n  },[for_cod]);\r\n\r\n  var datFim = hoje().bd;\r\n\r\n  useEffect(()=> {\r\n    api.get(`vendasmes/${for_cod}/${buscarUltimos30dias()}/${datFim}`).then(response => {\r\n     \r\n        setVendasmes(response.data)\r\n    })\r\n  },[for_cod]);\r\n\r\n  useEffect(()=> {\r\n    api.get(`Estoquetotal/${for_cod}`).then(response => {\r\n        setEstoquetotal(response.data)\r\n    })\r\n  },[for_cod]);\r\n\r\n\r\n\r\n  var datIniQuinz = buscarQuinzena().dataIni;\r\n  var datFimQuinz = buscarQuinzena().dataFim;\r\n  var dataMes = buscarUltimos30dias();\r\n\r\n   \r\n useEffect(()=> {\r\n    api.get(`ultimaatualizacao/`).then(response => {\r\n        setUltimaatualizacao(response.data)\r\n        console.log(response.data)\r\n    })\r\n  },[]);\r\n      \r\n \r\n\r\n  \r\n        \r\n\r\n       \r\n\r\nreturn (\r\n<React.Fragment>\r\n\r\n    <div>\r\n    <MenuSuperior />\r\n    \r\n\r\n  </div>\r\n\r\n    <div className=\"root3\">\r\n        <div className=\"geral\">\r\n            <div className=\"container1\">\r\n            <hr></hr>\r\n<b id=\"ultimaAtualizacaoMov\">Última atualização: {ultimaatualizacao.movfor_hora}</b>\r\n                <hr></hr>\r\n            </div>\r\n            <div className=\"container2\" id=\"resumo\">\r\n                <div className=\"rowVendaEstoque\">\r\n                    <div className=\"cardgeral\">\r\n                    {vendasdia.map(vendasdia => (\r\n                        <div  key={vendasdia} className=\"bloco\" >\r\n                            <Card className=\"card1\">\r\n                                <CardTitle>Venda Hoje</CardTitle>\r\n              \r\n                <p><span className=\"quantidade\">Quantidade: {vendasdia.totalpeca}</span></p>\r\n                    <p><span className=\"valorTotal\">Valor Total: {vendasdia.total}</span></p>\r\n                                <p>\r\n                                    <span className=\"periodo1\">De: {hoje().formatado}</span>\r\n                                    <span className=\"periodo2\"> Ate: {hoje().formatado}</span>\r\n                                </p>\r\n                                <Button id=\"buttom1\" className=\"btn1\" type=\"submit\">VER</Button>\r\n\r\n               \r\n                              \r\n                            </Card>\r\n                        </div>\r\n                        ))}\r\n\r\n                        \r\n                           {vendas.map(vendas => (\r\n                        <div  key={vendas} className=\"bloco\">\r\n                            <Card className=\"card2\">\r\n                                <CardTitle>Venda Quinzena</CardTitle>\r\n                                <p><span className=\"quantidade\">Quantidade: {vendas.totalpeca}</span></p>\r\n                                <p><span className=\"valorTotal\">Valor Total: {vendas.total}</span></p>\r\n                                <p>\r\n                                    <span className=\"periodo1\">De: {datIniQuinz.split('-')[2] + '/' + datIniQuinz.split('-')[1] + '/' + datIniQuinz.split('-')[0]}</span>\r\n                                    <span className=\"periodo2\"> Ate: {datFimQuinz.split('-')[2] + '/' + datFimQuinz.split('-')[1] + '/' + datFimQuinz.split('-')[0]}</span>\r\n                                </p>\r\n                                <Button id=\"buttom2\" className=\"btn2\" type=\"submit\">VER</Button>\r\n                            </Card>\r\n                        </div>\r\n\r\n))}\r\n{vendasmes.map(vendasmes => (\r\n                        <div  key={vendasmes} className=\"bloco\">\r\n                            <Card className=\"card3\">\r\n                                <CardTitle>Venda Últimos 30 dias</CardTitle>\r\n                                <p><span className=\"quantidade\">Quantidade: {vendasmes.totalpeca}</span></p>\r\n                                <p><span className=\"valorTotal\">Valor Total: {vendasmes.total}</span></p>\r\n                                <p>\r\n                                    <span className=\"periodo1\">De: {dataMes.split('-')[2] + '/' + dataMes.split('-')[1] + '/' + dataMes.split('-')[0]}</span>\r\n                                    <span className=\"periodo2\"> Ate: {hoje().formatado}</span>\r\n                                </p>\r\n                                <Button id=\"buttom3\" className=\"btn\" type=\"submit\">VER</Button>\r\n                            </Card>\r\n                        </div>\r\n                        ))}\r\n                        {Estoquetotal.map(Estoquetotal => (\r\n                        <div key={Estoquetotal} className=\"bloco\">\r\n                            <Card className=\"card4\">\r\n                                <CardTitle>Estoque</CardTitle>\r\n                                <p><span className=\"quantidade\">Quantidade: {Estoquetotal.totalpeca}</span></p>\r\n                                <p><span className=\"valorTotal\">Valor Total: {Estoquetotal.total}</span></p>\r\n                                <p>\r\n                                    <span className=\"periodo1\">Estoque Total</span>\r\n                                </p>\r\n                                <Button id=\"buttom4\" className=\"btn4\" type=\"button\" disabled>INFORMATIVO</Button>\r\n                            </Card>\r\n                        </div>\r\n                         ))}\r\n                    </div>\r\n                </div>    \r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div>\r\n    <TabelaFornecedor />\r\n    \r\n\r\n    </div>\r\n    </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default VendaEstoque;"]},"metadata":{},"sourceType":"module"}