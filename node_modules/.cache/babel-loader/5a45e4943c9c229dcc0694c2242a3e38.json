{"ast":null,"code":"import { gapi, gapiComplete } from './gapiScript';\n\nconst loadAuth2 = async function (clientId, scopes) {\n  return new Promise(resolve => {\n    gapi.load('auth2', () => {\n      resolve(gapi.auth2.init({\n        client_id: clientId,\n        scope: scopes\n      }));\n    });\n  });\n};\n\nconst loadAuth2WithProps = async function (props) {\n  return new Promise(resolve => {\n    gapi.load('auth2', () => {\n      resolve(gapi.auth2.init(props));\n    });\n  });\n};\n\nexport { gapi, gapiComplete, loadAuth2, loadAuth2WithProps };","map":{"version":3,"sources":["C:/wamp64/www/thinkfornecedoresfront/node_modules/gapi-script/index.js"],"names":["gapi","gapiComplete","loadAuth2","clientId","scopes","Promise","resolve","load","auth2","init","client_id","scope","loadAuth2WithProps","props"],"mappings":"AAAA,SAASA,IAAT,EAAeC,YAAf,QAAmC,cAAnC;;AAEA,MAAMC,SAAS,GAAG,gBAAgBC,QAAhB,EAA0BC,MAA1B,EAAkC;AAChD,SAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC1BN,IAAAA,IAAI,CAACO,IAAL,CAAU,OAAV,EAAmB,MAAM;AACrBD,MAAAA,OAAO,CAACN,IAAI,CAACQ,KAAL,CAAWC,IAAX,CAAgB;AACpBC,QAAAA,SAAS,EAAEP,QADS;AAEpBQ,QAAAA,KAAK,EAAEP;AAFa,OAAhB,CAAD,CAAP;AAIH,KALD;AAMH,GAPM,CAAP;AAQH,CATD;;AAWA,MAAMQ,kBAAkB,GAAG,gBAAgBC,KAAhB,EAAuB;AAC9C,SAAO,IAAIR,OAAJ,CAAYC,OAAO,IAAI;AAC1BN,IAAAA,IAAI,CAACO,IAAL,CAAU,OAAV,EAAmB,MAAM;AACrBD,MAAAA,OAAO,CAACN,IAAI,CAACQ,KAAL,CAAWC,IAAX,CAAgBI,KAAhB,CAAD,CAAP;AACH,KAFD;AAGH,GAJM,CAAP;AAKH,CAND;;AAQA,SAASb,IAAT,EAAeC,YAAf,EAA6BC,SAA7B,EAAwCU,kBAAxC","sourcesContent":["import { gapi, gapiComplete } from './gapiScript';\n\nconst loadAuth2 = async function (clientId, scopes) {\n    return new Promise(resolve => {\n        gapi.load('auth2', () => {\n            resolve(gapi.auth2.init({\n                client_id: clientId,\n                scope: scopes\n            }));\n        });\n    });\n}\n\nconst loadAuth2WithProps = async function (props) {\n    return new Promise(resolve => {\n        gapi.load('auth2', () => {\n            resolve(gapi.auth2.init(props));\n        });\n    });\n}\n\nexport { gapi, gapiComplete, loadAuth2, loadAuth2WithProps };\n"]},"metadata":{},"sourceType":"module"}